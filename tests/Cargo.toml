[package]
edition = { workspace = true }
license = { workspace = true }
name    = "tests"
publish = false
version = "0.1.0"

[lints]
workspace = true

[features]
default = []

[dependencies]
chain-service            = { workspace = true }
common-http-client       = { workspace = true }
cryptarchia-engine       = { features = ["serde"], workspace = true }
ed25519-dalek            = { version = "2.2.0", features = ["rand_core", "serde"] }
executor-http-client     = { workspace = true }
futures                  = { default-features = false, version = "0.3" }
futures-util             = { default-features = false, version = "0.3.31" }
kzgrs-backend            = { workspace = true }
nomos-core               = { workspace = true }
nomos-da-network-service = { workspace = true }
nomos-libp2p             = { workspace = true }
nomos-sdp                = { workspace = true }
nomos-utils              = { workspace = true }
rand                     = { workspace = true }
rand_core                = { version = "^0.9" }
reqwest                  = { workspace = true, features = ["json"] }
serial_test              = "3.1.1"
subnetworks-assignations = { workspace = true }
testing-framework-core   = { workspace = true, default-features = false }
tokio                    = "1"

[[test]]
name = "test_cryptarchia_happy_path"
path = "src/tests/cryptarchia/happy.rs"

[[test]]
name = "test_cryptarchia_bootstrap"
path = "src/tests/cryptarchia/bootstrap.rs"

[[test]]
name = "test_orphan_handling"
path = "src/tests/cryptarchia/orphan.rs"

[[test]]
name = "test_immutable_blocks"
path = "src/tests/cryptarchia/immutable_blocks.rs"

[[test]]
name = "test_da"
path = "src/tests/da/disperse.rs"

[[test]]
name = "test_da_api"
path = "src/tests/da/api.rs"

[[test]]
name = "test_mempool_api"
path = "src/tests/mempool/api.rs"

[[test]]
name = "test_membership_api"
path = "src/tests/membership/api.rs"

[[test]]
name = "test_membership_disperse"
path = "src/tests/membership/disperse.rs"

[[test]]
name = "test_da_historic_sampling"
path = "src/tests/da/historic_sampling.rs"
