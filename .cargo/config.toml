# DO NOT RE-ORDER LINES IN THIS FILE, AS ORDER MATTERS!

[target.'cfg(target_os = "macos")']
# when using osx, we need to link against some golang libraries, it did just work with this missing flags
# from: https://github.com/golang/go/issues/42459
rustflags = [
  "-C",
  "link-args=-framework CoreFoundation -framework Security -framework CoreServices -lresolv",
]

[target.'cfg(all())']
rustflags = [
  # Nursery and allowed nursery warnings (new lints will warn by default)
  "-Wclippy::nursery",

  # Pedantic and allowed pedantic warnings (new lints will warn by default)
  "-Wclippy::pedantic",
  "-Aclippy::similar_names",

  # Restriction and allowed restriction warnings (new lints will warn by default)
  "-Aclippy::blanket_clippy_restriction_lints",
  "-Wclippy::restriction",
  "-Aclippy::absolute_paths",
  "-Aclippy::alloc_instead_of_core",
  "-Aclippy::arbitrary_source_item_ordering",
  "-Aclippy::big_endian_bytes",
  "-Aclippy::decimal_literal_representation",
  "-Aclippy::default_numeric_fallback",
  "-Aclippy::deref_by_slicing",
  "-Aclippy::else_if_without_else",
  "-Aclippy::exhaustive_enums",
  "-Aclippy::exhaustive_structs",
  "-Aclippy::exit",
  "-Aclippy::expect_used",
  "-Aclippy::field_scoped_visibility_modifiers",
  "-Aclippy::float_arithmetic",
  "-Aclippy::get_unwrap",
  "-Aclippy::host_endian_bytes",
  "-Aclippy::implicit_return",
  "-Aclippy::integer_division_remainder_used",
  "-Aclippy::iter_over_hash_type",
  "-Aclippy::let_underscore_must_use",
  "-Aclippy::let_underscore_untyped",
  "-Aclippy::little_endian_bytes",
  "-Aclippy::map_err_ignore",
  "-Aclippy::min_ident_chars",
  "-Aclippy::missing_asserts_for_indexing",
  "-Aclippy::missing_docs_in_private_items",
  "-Aclippy::missing_inline_in_public_items",
  "-Aclippy::missing_trait_methods",
  "-Aclippy::mixed_read_write_in_expression",
  "-Aclippy::mod_module_files",
  "-Aclippy::module_name_repetitions",
  "-Aclippy::modulo_arithmetic",
  "-Aclippy::panic",
  "-Aclippy::panic_in_result_fn",
  "-Aclippy::partial_pub_fields",
  "-Aclippy::print_stderr",
  "-Aclippy::print_stdout",
  "-Aclippy::pub_use",
  "-Aclippy::pub_with_shorthand",
  "-Aclippy::question_mark_used",
  "-Aclippy::self_named_module_files",
  "-Aclippy::semicolon_inside_block",
  "-Aclippy::single_call_fn",
  "-Aclippy::single_char_lifetime_names",
  "-Aclippy::std_instead_of_alloc",
  "-Aclippy::std_instead_of_core",
  "-Aclippy::struct_field_names",
  "-Aclippy::unseparated_literal_suffix",
  "-Aclippy::use_debug",
  "-Aclippy::wildcard_enum_match_arm",

  # TODO: Address these Clippy lints at some point (by deleting the entry, which turns them into warnings).
  "-Aclippy::arithmetic_side_effects",
  "-Aclippy::as_conversions",
  "-Aclippy::as_pointer_underscore",
  "-Aclippy::as_underscore",
  "-Aclippy::assertions_on_result_states",
  "-Aclippy::cast_possible_truncation",
  "-Aclippy::cast_possible_wrap",
  "-Aclippy::cast_precision_loss",
  "-Aclippy::cast_sign_loss",
  "-Aclippy::cfg_not_test",
  "-Aclippy::dbg_macro",
  "-Aclippy::error_impl_error",
  "-Aclippy::impl_trait_in_params",
  "-Aclippy::indexing_slicing",
  "-Aclippy::infinite_loop",
  "-Aclippy::integer_division",
  "-Aclippy::large_stack_frames",
  "-Aclippy::missing_assert_message",
  "-Aclippy::missing_errors_doc",
  "-Aclippy::missing_panics_doc",
  "-Aclippy::pattern_type_mismatch",
  "-Aclippy::ref_patterns",
  "-Aclippy::renamed_function_params",
  "-Aclippy::same_name_method",
  "-Aclippy::shadow_reuse",
  "-Aclippy::shadow_same",
  "-Aclippy::shadow_unrelated",
  "-Aclippy::tests_outside_test_module",
  "-Aclippy::todo",
  "-Aclippy::unimplemented",
  "-Aclippy::unreachable",
  "-Aclippy::unwrap_in_result",
  "-Aclippy::unwrap_used",

  # Explicitly allowed Rustc lints

  # Rustc lints which are allow-by-default but have been changed to "warn"
  "-Wredundant_imports",
  "-Wredundant_lifetimes",

  # TODO: Address these allow-by-default Rustc lints at some point by either allowing them permanently or enforce them, and move them to the relative section according to the decision.
  "-Aabsolute_paths_not_starting_with_crate",
  "-Aambiguous_negative_literals",
  "-Aclosure_returning_async_block",
  "-Adeprecated_safe_2024",
  "-Aderef_into_dyn_supertrait",
  "-Aedition_2024_expr_fragment_specifier",
  "-Aelided_lifetimes_in_paths",
  "-Aexplicit_outlives_requirements",
  "-Affi_unwind_calls",
  "-Aif_let_rescope",
  "-Aimpl_trait_overcaptures",
  "-Aimpl_trait_redundant_captures",
  "-Akeyword-idents",
  "-Akeyword_idents_2018",
  "-Akeyword_idents_2024",
  "-Alet_underscore_drop",
  "-Alinker_messages",
  "-Amacro_use_extern_crate",
  "-Ameta_variable_misuse",
  "-Amissing_copy_implementations",
  "-Amissing_debug_implementations",
  "-Amissing_docs",
  "-Amissing_unsafe_on_extern",
  "-Anon_ascii_idents",
  "-Arust_2021_incompatible_closure_captures",
  "-Arust_2021_incompatible_or_patterns",
  "-Arust_2021_prefixes_incompatible_syntax",
  "-Arust_2021_prelude_collisions",
  "-Arust_2024_guarded_string_incompatible_syntax",
  "-Arust_2024_incompatible_pat",
  "-Arust_2024_prelude_collisions",
  "-Asingle_use_lifetimes",
  "-Atail_expr_drop_order",
  "-Atrivial_casts",
  "-Atrivial_numeric_casts",
  "-Aunit_bindings",
  "-Aunnameable_types",
  "-Aunreachable_pub",
  "-Aunsafe_attr_outside_unsafe",
  "-Aunsafe_code",
  "-Aunsafe_op_in_unsafe_fn",
  "-Aunstable_features",
  "-Aunused_crate_dependencies",
  "-Aunused_extern_crates",
  "-Aunused_import_braces",
  "-Aunused_lifetimes",
  "-Aunused_macro_rules",
  "-Aunused_qualifications",
  "-Aunused_results",
  "-Avariant_size_differences"
]