[target.'cfg(target_os = "macos")']
# when using osx, we need to link against some golang libraries, it did just work with this missing flags
# from: https://github.com/golang/go/issues/42459
rustflags = [
  "-C",
  "link-args=-framework CoreFoundation -framework Security -framework CoreServices -lresolv",
]

[target.'cfg(all())']
rustflags = [
  "-Wclippy::nursery",

  "-Wclippy::pedantic",
  "-Aclippy::similar_names",

  "-Aclippy::blanket_clippy_restriction_lints",
  "-Wclippy::restriction",
  "-Aclippy::absolute_paths",
  "-Aclippy::alloc_instead_of_core",
  "-Aclippy::arbitrary_source_item_ordering",
  "-Aclippy::big_endian_bytes",
  "-Aclippy::decimal_literal_representation",
  "-Aclippy::deref_by_slicing",
  "-Aclippy::else_if_without_else",
  "-Aclippy::exhaustive_enums",
  "-Aclippy::exhaustive_structs",
  "-Aclippy::expect_used",
  "-Aclippy::float_arithmetic",
  "-Aclippy::get_unwrap",
  "-Aclippy::host_endian_bytes",
  "-Aclippy::implicit_return",
  "-Aclippy::integer_division_remainder_used",
  "-Aclippy::iter_over_hash_type",
  "-Aclippy::let_underscore_must_use",
  "-Aclippy::little_endian_bytes",
  "-Aclippy::map_err_ignore",
  "-Aclippy::min_ident_chars",
  "-Aclippy::missing_asserts_for_indexing",
  "-Aclippy::missing_docs_in_private_items",
  "-Aclippy::missing_inline_in_public_items",
  "-Aclippy::missing_trait_methods",
  "-Aclippy::mixed_read_write_in_expression",
  "-Aclippy::mod_module_files",
  "-Aclippy::modulo_arithmetic",
  "-Aclippy::panic",
  "-Aclippy::panic_in_result_fn",
  "-Aclippy::print_stderr",
  "-Aclippy::print_stdout",
  "-Aclippy::pub_use",
  "-Aclippy::pub_with_shorthand",
  "-Aclippy::question_mark_used",
  "-Aclippy::self_named_module_files",
  "-Aclippy::semicolon_inside_block",
  "-Aclippy::semicolon_outside_block",
  "-Aclippy::single_call_fn",
  "-Aclippy::single_char_lifetime_names",
  "-Aclippy::std_instead_of_alloc",
  "-Aclippy::std_instead_of_core",
  "-Aclippy::unreachable",
  "-Aclippy::unseparated_literal_suffix",
  "-Aclippy::unwrap_in_result",
  "-Aclippy::use_debug",
  "-Aclippy::wildcard_enum_match_arm",

  # TODO: Remove at some point
  "-Aclippy::cast_possible_truncation",
  "-Aclippy::cast_possible_wrap",
  "-Aclippy::cast_precision_loss",
  "-Aclippy::cast_sign_loss",
  "-Aclippy::large_stack_frames",
  "-Aclippy::missing_errors_doc",
  "-Aclippy::missing_panics_doc",
  "-Aclippy::unimplemented",

  # TODO: Remove one by one for each commit
  "-Aclippy::arithmetic_side_effects",
  "-Aclippy::as_conversions",
  "-Aclippy::default_numeric_fallback",
  "-Aclippy::error_impl_error",
  "-Aclippy::exit",
  "-Aclippy::field_scoped_visibility_modifiers",
  "-Aclippy::float_cmp_const",
  "-Aclippy::fn_to_numeric_cast_any",
  "-Aclippy::impl_trait_in_params",
  "-Aclippy::indexing_slicing",
  "-Aclippy::integer_division",
  "-Aclippy::let_underscore_untyped",
  "-Aclippy::map_with_unused_argument_over_ranges",
  "-Aclippy::mem_forget",
  "-Aclippy::missing_assert_message",
  "-Aclippy::module_name_repetitions",
  "-Aclippy::multiple_inherent_impl",
  "-Aclippy::mutex_atomic",
  "-Aclippy::mutex_integer",
  "-Aclippy::partial_pub_fields",
  "-Aclippy::pathbuf_init_then_push",
  "-Aclippy::pattern_type_mismatch",
  "-Aclippy::ref_patterns",
  "-Aclippy::renamed_function_params",
  "-Aclippy::rest_pat_in_fully_bound_structs",
  "-Aclippy::same_name_method",
  "-Aclippy::shadow_reuse",
  "-Aclippy::shadow_same",
  "-Aclippy::shadow_unrelated",
  "-Aclippy::unwrap_used",
]
