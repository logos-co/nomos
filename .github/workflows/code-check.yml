on:
  pull_request:
  push:
    branches: [ master ]

name: Code checks

concurrency:
  group: ${{ github.workflow }}@${{ github.ref }}
  cancel-in-progress: true

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4        
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2025-01-03
          profile: minimal
          components: rustfmt
          override: true
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

  cargo-deny:
    name: Check cargo-deny rules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run `cargo deny`
        uses: EmbarkStudios/cargo-deny-action@v2
        with:
          # All is set in the config file
          arguments:
          command-arguments: "--hide-inclusion-graph -c .cargo-deny.toml --show-stats -D warnings"
  
  lints:
    name: Check Rust lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install risc0 dependencies
        uses: ./.github/actions/install-risc0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Cargo cache
        uses: ./.github/actions/setup-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}
          github-token: ${{ secrets.GITHUB_TOKEN }}        
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        env:
          RISC0_SKIP_BUILD: true
        with:
          command: clippy
          args: --all --all-targets --all-features -- -D warnings
      - name: Update Cargo cache
        if: success() || failure()
        uses: ./.github/actions/update-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}
 
  tests:
    name: Run test suite
    if: ${{ !startsWith(github.event.pull_request.title, '[WIP]') && !contains(github.event.label.name,  'DO NOT MERGE') }}
    strategy:
      fail-fast: false # all OSes should be tested even if one fails (default: true)
      matrix:
        os: [ self-hosted, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install risc0 dependencies
        uses: ./.github/actions/install-risc0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Cargo cache
        uses: ./.github/actions/setup-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
          github-token: ${{ secrets.GITHUB_TOKEN }}        
      - name: Build required binaries
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features -p nomos-node -p nomos-executor
      - name: Cargo test
        uses: actions-rs/cargo@v1
        env:
          RISC0_DEV_MODE: true
          CONSENSUS_SLOT_TIME: 5
        with:
          command: test
          # We don't test benches as they take 6h+, leading to a timeout
          args: --all --lib --bins --tests --examples --all-features
      - name: Update Cargo cache
        if: success() || failure()
        uses: ./.github/actions/update-cargo-cache
        with:
          key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
      - name: Upload integration tests results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: integration-test-artifacts
          path: tests/.tmp*
  
  build-docker:
    name: Trigger Docker build
    runs-on: ubuntu-latest
    needs:
      - formatting
      - cargo-deny
      - lints
      - tests
    env:
      DOCKER_BUILD_WORKFLOW_FILE: build-docker.yml # Change this in case of file renamings
    steps:
      - name: Trigger "Docker build" workflow
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '${{ env.DOCKER_BUILD_WORKFLOW_FILE }}',
              ref: '${{ github.head_ref || github.ref }}',
            })
