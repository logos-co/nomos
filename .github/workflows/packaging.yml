name: Packaging and Distribution

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release. Must follow the format of 'vX.Y.Z'."
        required: true
        default: "v0.0.0"
  # For testing purposes.
  pull_request:

jobs:
  package:
    name: "Packaging for ${{ matrix.platform.arch }}-${{ matrix.platform.os }}"
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: linux
            arch: amd64
            builder: ubuntu-24.04
            target_triple: x86_64-unknown-linux-gnu
          - os: linux
            arch: i686
            builder: ubuntu-24.04
            target_triple: i686-unknown-linux-gnu
          - os: macos
            arch: aarch64
            builder: macos-14
            target_triple: aarch64-apple-darwin
          # # `rzup` not available for this platform yet.
          # - os: macos
          #   arch: amd64
          #   builder: macos-13
          #   target_triple: x86_64-apple-darwin
          #   bundle_path: "target/debug/bundle"
          # # `rzup` not available for this platform yet.
          # - os: windows
          #   arch: amd64
          #   builder: windows-2022
          #   target_triple: x86_64-pc-windows-msvc
          #   bundle_path: "target/debug/bundle"

    runs-on: ${{ matrix.platform.builder }}
    steps:
      - name: Define version
        env:
          VERSION: ${{ github.event.release.tag_name || inputs.version }}
        run: |
          if [ -z "$VERSION" ]; then
            echo "VERSION not set."
            #            exit 1
            # For testing purposes.
            VERSION="v0.0.0"
          elif [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "VERSION must follow the format of 'vX.Y.Z'. Value: '$VERSION'."
            exit 2
          fi

          # Export the version to be used in the following steps.
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        name: Install Rust toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target_triple }}

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          os: ${{ matrix.platform.os }}
          target_triple: ${{ matrix.platform.target_triple }}

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --no-default-features --target ${{ matrix.platform.target_triple }}

      - name: Bundle
        run: |
          ./target/${{ matrix.platform.target_triple }}/debug/bundle-nomos-cli

      - name: Print Folder Tree
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          exclude: "dist|incremental|deps|build"
          path: ./target
          depth: 2

      - name: Print Folder Tree
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          exclude: "dist|incremental|deps|build"
          path: ./target/${{ matrix.platform.target_triple }}/debug/bundle
          depth: 2

      - name: Print tree
        shell: bash
        run: |
          sudo apt-get install tree
          tree -L 2 target/
          tree -L 2 target/${{ matrix.platform.target_triple }}/debug/bundle

      - name: Upload RPM
        if: matrix.platform.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ env.VERSION }}_${{ matrix.platform.arch }}.rpm"
          path: "target/${{ matrix.platform.target_triple }}/debug/bundle/rpm/nomos-cli-${{ env.VERSION }}-.x86_64.rpm"
          if-no-files-found: error

      - name: Upload DEB
        if: matrix.platform.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ env.VERSION }}_${{ matrix.platform.arch }}.deb"
          path: "target/${{ matrix.platform.target_triple }}/debug/bundle/deb/nomos-cli_${{ env.VERSION }}_amd64.deb"
          if-no-files-found: error

      - name: Upload AppImage
        if: matrix.platform.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ env.VERSION }}_${{ matrix.platform.arch }}.AppImage"
          path: "target/${{ matrix.platform.target_triple }}/debug/bundle/appimage/nomos-cli_${{ env.VERSION }}_amd64.AppImage"
          if-no-files-found: error

      - name: Upload DMG
        if: matrix.platform.os == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ env.VERSION }}_${{ matrix.platform.arch }}.dmg"
          path: "target/${{ matrix.platform.target_triple }}/debug/bundle/dmg/nomos-cli_${{ env.VERSION }}_amd64.dmg"
          if-no-files-found: error

      - name: Upload MSI
        if: matrix.platform.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ env.VERSION }}_${{ matrix.platform.arch }}.msi"
          path: "target/${{ matrix.platform.target_triple }}/debug/bundle/msi/nomos-cli_${{ env.VERSION }}_amd64.msi"
          if-no-files-found: error
