name: Packaging

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:

jobs:
  package:
    name: "Packaging on ${{ matrix.platform.os }}-${{ matrix.platform.arch }}"
    strategy:
      fail-fast: false
      matrix:
        platform:
          # Works (tested using binstall)
          - os: linux
            arch: amd64
            builder: ubuntu-24.04
            target_triple: x86_64-unknown-linux-gnu
            bundle_path: "target/debug/bundle"
          # Works (tested using binstall)
          - os: linux
            arch: i686
            builder: ubuntu-24.04
            target_triple: i686-unknown-linux-gnu
            bundle_path: "target/i686-unknown-linux-gnu/debug/bundle"
          # Works (tested using binstall)
          - os: macos
            arch: aarch64
            builder: macos-14
            target_triple: aarch64-apple-darwin
            bundle_path: "target/debug/bundle"
          #          # WIP
          #          - os: macos
          #            arch: amd64
          #            builder: macos-13
          #            target_triple: x86_64-apple-darwin
          #            bundle_path: "target/debug/bundle"
          #          # WIP
          #          - os: windows
          #            arch: amd64
          #            builder: windows-2022
          #            target_triple: X8664-pc-windows-msvc
          #            bundle_path: "target/debug/bundle"
    runs-on: ${{ matrix.platform.builder }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        name: Install Rust toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.platform.target_triple }}

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          os: ${{ matrix.platform.os }}
          target_triple: ${{ matrix.platform.target_triple }}

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --no-default-features --target ${{ matrix.platform.target_triple }}

      - name: Print binaries
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: ./target/
          depth: 3

      - name: Bundle
        run: |
          ./target/debug/bundle-nomos-cli

      - name: Print Folder Tree
        uses: jaywcjlove/github-action-folder-tree@main
        with:
          path: ./target/debug/bundle
          depth: 2

      # TODO: Add to path for Linux
      # i686-unknown-linux-gnu
      - name: Upload RPM
        if: matrix.platform.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ github.event.release.tag_name }}_${{ matrix.platform.arch }}.rpm"
          path: "target/debug/bundle/rpm/nomos-cli-${{ github.event.release.tag_name }}-.x86_64.rpm"
          if-no-files-found: error

      - name: Upload DEB
        if: matrix.platform.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ github.event.release.tag_name }}_${{ matrix.platform.arch }}.deb"
          path: "target/debug/bundle/deb/nomos-cli_${{ github.event.release.tag_name }}_amd64.deb"
          if-no-files-found: error

      - name: Upload AppImage
        if: matrix.platform.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ github.event.release.tag_name }}_${{ matrix.platform.arch }}.AppImage"
          path: "target/debug/bundle/appimage/nomos-cli_${{ github.event.release.tag_name }}_amd64.AppImage"
          if-no-files-found: error

      - name: Upload DMG
        if: matrix.platform.os == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ github.event.release.tag_name }}_${{ matrix.platform.arch }}.dmg"
          path: "target/debug/bundle/dmg/nomos-cli_${{ github.event.release.tag_name }}_amd64.dmg"
          if-no-files-found: error

      - name: Upload MSI
        if: matrix.platform.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: "nomos-cli_${{ github.event.release.tag_name }}_${{ matrix.platform.arch }}.msi"
          path: "target/debug/bundle/msi/nomos-cli_${{ github.event.release.tag_name }}_amd64.msi"
          if-no-files-found: error
