on:
  push:
    branches:
        - aa/test-not-dry-run

name: Test job

concurrency:
  group: ${{ github.workflow }}@${{ github.ref }}
  cancel-in-progress: true

jobs:
    check-features:
        name: Check features
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
            - name: Install cargo-features-manager
              run: cargo install cargo-features-manager@0.10.0
            - name: Run cargo-features-manager
              run: cargo features prune
            - name: Install taplo CLI
              run: cargo install taplo-cli --locked --version 0.9.3
            - name: Run taplo lint
              run: taplo lint
            - name: Run taplo fmt
              run: taplo fmt
            - name: Commit and push changes
              run: |
                git config user.name "test"
                git add .
                git commit -m "test changed TOML files" || echo "No changes to commit"
                git push origin HEAD:${GITHUB_REF#refs/heads/}
    features:
      name: Check packages feature combinations
      needs: check-features
      strategy:
        fail-fast: false
        matrix:
          os: [ ubuntu-latest, macos-latest ]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
        - name: Install cargo-hack
          uses: taiki-e/install-action@5651179950649c44da31d346537e20c0534f0f25  # Version 2.49.35
          with:
            tool: cargo-hack
        - name: Set up Cargo cache
          uses: ./.github/actions/setup-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
            github-token: ${{ secrets.GITHUB_TOKEN }}
        - name: Run cargo-hack
          env:
            RISC0_SKIP_BUILD: true
            RUSTFLAGS: -D warnings
          run: cargo hack --feature-powerset --no-dev-deps check
        - name: Update Cargo cache
          if: success() || failure()
          uses: ./.github/actions/update-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
    unused-deps:
      name: Check for unused dependencies
      needs: check-features
      strategy:
        fail-fast: false
        matrix:
          os: [ ubuntu-latest, macos-latest ]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
        - name: Install cargo-machete
          uses: bnjbvr/cargo-machete@9f0895d780783da0089162cae9668f6ec6e896c4  # Version 0.8.0
          # This step also runs `cargo-machete` without the `--with-metadata` flag, which can trigger more false positives.
          # We ignore errors and run `cargo-machete` with the `--with-metadata` flag for the actual result.
          continue-on-error: true
        - name: Run cargo-machete
          run: cargo machete --with-metadata
    lints:
      name: Check Rust lints
      needs: check-features
      strategy:
        fail-fast: false
        matrix:
          os: [ ubuntu-latest, macos-latest ]
      runs-on: ${{ matrix.os }}
      env:
            RISC0_SKIP_BUILD: true
            RUSTFLAGS: -D warnings
      steps:
        - name: Checkout repository
          uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
        - name: Set up Cargo cache
          uses: ./.github/actions/setup-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
            github-token: ${{ secrets.GITHUB_TOKEN }}        
        - name: Run cargo clippy on workspace
          uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
          with:
            command: clippy
            args: --all --all-targets --all-features
        - name: Update Cargo cache
          if: success() || failure()
          uses: ./.github/actions/update-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}          
        - name: Install risc0 Rust toolchain
          uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746  # Version 1.0.6
          with:
            toolchain: 1.88.0
            components: clippy
            override: true
        - name: Run cargo clippy on risc0 crates
          id: risc0-clippy
          # We need to do this way since we can't use `--all-features` for crates outside of the workspace, so we need to lint each crate separately.
          run: |
            cd ./nomos-core/proof_statements
            cargo clippy --all-targets --all-features
            cd ../risc0_proofs
            cargo clippy --all-targets --all-features          