on:
    workflow_dispatch:
    push:
        branches:
            - aa/features-optimization

name: Check dependencies features

concurrency:
  group: ${{ github.workflow }}@${{ github.ref }}
  cancel-in-progress: true

jobs:
    check-features:
        name: Check features
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
            - name: Install cargo-features-manager
              run: cargo install cargo-features-manager@0.10.0
            - name: Run cargo-features-manager
              run: cargo features prune --dry-run
    lints:
      name: Check Rust lints
      strategy:
        fail-fast: false
        matrix:
          os: [ ubuntu-latest, macos-latest ]
      runs-on: ${{ matrix.os }}
      env:
            RISC0_SKIP_BUILD: true
            RUSTFLAGS: -D warnings
      steps:
        - name: Checkout repository
          uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
        - name: Set up Cargo cache
          uses: ./.github/actions/setup-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}
            github-token: ${{ secrets.GITHUB_TOKEN }}        
        - name: Run cargo clippy on workspace
          uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
          with:
            command: clippy
            args: --all --all-targets --all-features
        - name: Update Cargo cache
          if: success() || failure()
          uses: ./.github/actions/update-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ matrix.os }}          
        - name: Install risc0 Rust toolchain
          uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746  # Version 1.0.6
          with:
            toolchain: 1.88.0
            components: clippy
            override: true
        - name: Run cargo clippy on risc0 crates
          id: risc0-clippy
          # We need to do this way since we can't use `--all-features` for crates outside of the workspace, so we need to lint each crate separately.
          run: |
            cd ./nomos-core/proof_statements
            cargo clippy --all-targets --all-features
            cd ../risc0_proofs
            cargo clippy --all-targets --all-features
    tests:
      name: Run test suite
      if: ${{ !startsWith(github.event.pull_request.title, '[WIP]') && !contains(github.event.label.name,  'DO NOT MERGE') }}
      strategy:
        fail-fast: false # all OSes should be tested even if one fails (default: true)
        matrix:
          os:
            # Using self-hosted runners because we were running out of memory on GitHub-hosted runners
            - [self-hosted, Linux]
            - [self-hosted, macOS]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Disable rustup override
          run: rustup override unset
        - name: Checkout repository
          uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2  # Version 4.2.2
        - name: Install risc0 dependencies
          uses: ./.github/actions/install-risc0
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
        - name: Set up Cargo cache
          uses: ./.github/actions/setup-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ join(matrix.os, '_') }}
            github-token: ${{ secrets.GITHUB_TOKEN }}
        - name: Run the node binary to check the config file validity
          uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
          with:
            command: run
            args: -p nomos-node nodes/nomos-node/config.yaml --check-config
        - name: Run the executor binary to check the config file validity
          uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
          with:
            command: run
            args: -p nomos-executor nodes/nomos-executor/config.yaml --check-config
        # This includes testing feature needed for tests
        - name: Build binaries with all features
          uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72
          with:
            command: build
            args: --all-features
        - name: Cargo test
          uses: actions-rs/cargo@9e120dd99b0fbad1c065f686657e914e76bd7b72  # Version 1.0.1
          env:
            RISC0_DEV_MODE: true
            CONSENSUS_SLOT_TIME: 5
          with:
            command: test
            # We don't test benches as they take 6h+, leading to a timeout
            args: --all --lib --bins --tests --examples --all-features
        - name: Update Cargo cache
          if: success() || failure()
          uses: ./.github/actions/update-cargo-cache
          with:
            key: ${{ github.ref }}->${{ github.workflow }}->${{ github.job }}->${{ join(matrix.os, '_') }}
        - name: Upload integration tests results
          uses: actions/upload-artifact@6027e3dd177782cd8ab9af838c04fd81a07f1d47 # Version 4.6.2
          if: failure()
          with:
            name: integration-test-artifacts
            include-hidden-files: true
            path: tests/.tmp*