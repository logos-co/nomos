name: macOS NTP Debug
on:
  pull_request:

jobs:
  macos-ntp-debug:
    name: macOS NTP Diagnostics
    runs-on: macos-latest
    timeout-minutes: 15
    steps:
      - name: Raw UDP Connectivity
        run: |
          # Run in GitHub macOS CI
          echo "Testing raw UDP socket:"
          python3 -c 'import socket; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.sendto(b"\x1b" + b"\0"*47, ("216.239.35.0", 123))'
          echo "Exit code $? (0=success)"

      - name: Test Minimal NTP Client
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

          cat << 'EOF' > ntp_test.rs
          use std::net::UdpSocket;
          use std::time::Duration;
          
          fn main() -> std::io::Result<()> {
              let socket = UdpSocket::bind("0.0.0.0:0")?;
              socket.set_read_timeout(Some(Duration::from_secs(2)))?;
          
              // NTP v4 client mode (LI=0, VN=4, Mode=3)
              let mut request = [0u8; 48];
              request[0] = 0x23;
          
              socket.send_to(&request, "216.239.35.0:123")?;
          
              let mut response = [0u8; 48];
              match socket.recv_from(&mut response) {
                  Ok((size, src)) => println!("Received {} bytes from {}", size, src),
                  Err(e) => eprintln!("Error: {}", e),
              }
              Ok(())
          }
          EOF
          rustc ntp_test.rs && ./ntp_test

      - name: Protocol specific checks
        run: |
          # Force IPv4 + NTPv4
          sntp -4 -V 4 -d -S 216.239.35.0
  
          # Check for ICMP errors
          sudo tcpdump -ni any "icmp and host 216.239.35.0"
