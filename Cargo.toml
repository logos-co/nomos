[workspace]
members = [
    "nomos-core/chain-defs",
    "nomos-core/cl",
    "nomos-da/full-replication",
    "nomos-da/kzgrs",
    "nomos-da/kzgrs-backend",
    "nomos-da/storage",
    "nomos-da/network/core",
    "nomos-da/network/messages",
    "nomos-da/network/subnetworks-assignations",
    "nomos-libp2p",
    "nomos-services/api",
    "nomos-services/tracing",
    "nomos-services/network",
    "nomos-services/storage",
    "nomos-services/cryptarchia-consensus",
    "nomos-services/mempool",
    "nomos-services/system-sig",
    "nomos-services/data-availability/indexer",
    "nomos-services/data-availability/network",
    "nomos-services/data-availability/sampling",
    "nomos-services/data-availability/verifier",
    "nomos-services/data-availability/dispersal",
    "nomos-services/data-availability/tests",
    "nomos-services/blend",
    "nomos-services/utils",
    "nomos-blend/core",
    "nomos-blend/message",
    "nomos-blend/network",
    "nomos-tracing",
    "nomos-cli",
    "nomos-utils",
    "nodes/nomos-node",
    "nodes/nomos-executor",
    "consensus/carnot-engine",
    "consensus/cryptarchia-engine",
    "ledger/nomos-ledger",
    "testnet/cfgsync",
    "tests",
    "clients/executor-http-client",
    "nomos-services/key-management-system",
    "nomos-bundler",
]
resolver = "2"

[workspace.package]
edition = "2021"
version = "0.1.0"

[workspace.dependencies]
# Local dependencies
nomos-core = { path = "nomos-core/chain-defs" }
cl = { path = "nomos-core/cl" }
full-replication = { path = "nomos-da/full-replication" }
kzgrs = { path = "nomos-da/kzgrs" }
kzgrs-backend = { path = "nomos-da/kzgrs-backend" }
nomos-da-storage = { path = "nomos-da/storage" }
nomos-da-network-core = { path = "nomos-da/network/core" }
nomos-da-messages = { path = "nomos-da/network/messages" }
subnetworks-assignations = { path = "nomos-da/network/subnetworks-assignations" }
nomos-libp2p = { path = "nomos-libp2p" }
nomos-api = { path = "nomos-services/api" }
nomos-tracing-service = { path = "nomos-services/tracing" }
nomos-network = { path = "nomos-services/network" }
nomos-storage = { path = "nomos-services/storage" }
cryptarchia-consensus = { path = "nomos-services/cryptarchia-consensus" }
nomos-mempool = { path = "nomos-services/mempool" }
nomos-system-sig = { path = "nomos-services/system-sig" }
nomos-da-indexer = { path = "nomos-services/data-availability/indexer" }
nomos-da-network-service = { path = "nomos-services/data-availability/network" }
nomos-da-sampling = { path = "nomos-services/data-availability/sampling" }
nomos-da-verifier = { path = "nomos-services/data-availability/verifier" }
nomos-da-dispersal = { path = "nomos-services/data-availability/dispersal" }
nomos-da-tests = { path = "nomos-services/data-availability/tests" }
nomos-blend-service = { path = "nomos-services/blend" }
utils = { path = "nomos-services/utils" }
nomos-blend = { path = "nomos-blend/core" }
nomos-blend-message = { path = "nomos-blend/message" }
nomos-blend-network = { path = "nomos-blend/network" }
nomos-tracing = { path = "nomos-tracing" }
nomos-cli = { path = "nomos-cli" }
nomos-utils = { path = "nomos-utils" }
nomos-node = { path = "nodes/nomos-node" }
nomos-executor = { path = "nodes/nomos-executor" }
carnot-engine = { path = "consensus/carnot-engine" }
cryptarchia-engine = { path = "consensus/cryptarchia-engine" }
nomos-ledger = { path = "ledger/nomos-ledger" }
cfgsync = { path = "testnet/cfgsync" }
tests = { path = "tests" }
executor-http-client = { path = "clients/executor-http-client" }
key-management-system = { path = "nomos-services/key-management-system" }
bundler = { path = "nomos-bundler" }

# External dependencies
async-trait = { version = "0.1" }
blake2 = { version = "0.10" }
bytes = { version = "1.3" }
futures = { version = "0.3" }
raptorq = { version = "1.7" }
serde = { version = "1.0" }
thiserror = { version = "1.0" }
bincode = { version = "1.3" }
once_cell = { version = "1.0" }
indexmap = { version = "1.9" }
const-hex = { version = "1" }
risc0-zkvm = { version = "1.1" }
tracing = { version = "0.1" }
anyhow = { version = "1.0" }
rand = { version = "0.8" }
rand_core = { version = "0.6.0" }
hex = { version = "0.4.3" }
sha2 = { version = "0.10" }
utoipa = { version = "4.0" }
serde_json = { version = "1.0" }
ark-ec = { version = "0.4.2" }
ark-bls12-381 = { version = "0.4.0" }
ark-bls12-381-ext = { version = "0.4.1" }
ark-ff = { version = "0.4.2" }
ark-poly = { version = "0.4.2" }
ark-poly-commit = { version = "0.4.0" }
ark-serialize = { version = "0.4" }
blst = { version = "0.3.11" }
derive_more = { version = "0.99" }
num-bigint = { version = "0.4.4" }
num-traits = { version = "0.2.18" }
rayon = { version = "1.10" }
divan = { version = "0.1" }
bitvec = { version = "1.0.1" }
itertools = { version = "0.12" }
sha3 = { version = "0.10" }
tokio = { version = "1" }
libp2p = { version = "0.53" }
libp2p-stream = { version = "0.1.0-alpha" }
tracing-subscriber = { version = "0.3.18" }
void = { version = "1.0.2" }
either = { version = "1.13.0" }
log = { version = "0.4" }
rand_chacha = { version = "0.3" }
tokio-stream = { version = "0.1" }
libp2p-identity = { version = "0.2" }
multiaddr = { version = "0.18" }
overwatch-rs = { git = "https://github.com/logos-co/Overwatch" }
overwatch-derive = { git = "https://github.com/logos-co/Overwatch" }
axum = { version = "0.6" }
hyper = { version = "0.14" }
tower-http = { version = "0.4" }
utoipa-swagger-ui = { version = "4.0" }
reqwest = { version = "0.11" }
opentelemetry = { version = "0.25" }
opentelemetry-otlp = { version = "0.25" }
opentelemetry_sdk = { version = "0.25" }
tracing-appender = { version = "0.2" }
tracing-loki = { version = "0.25" }
tracing-opentelemetry = { version = "0.26" }
tracing-gelf = { version = "0.7" }
chrono = { version = "0.4" }
humantime-serde = { version = "1" }
sscanf = { version = "0.4" }
sled = { version = "0.34" }
parking_lot = { version = "0.12" }
tempfile = { version = "3" }
tokio-util = { version = "0.7" }
tracing-futures = { version = "0.2" }
bls-signatures = { version = "0.14" }
serde_with = { version = "3.0.0" }
time = { version = "0.3" }
linked-hash-map = { version = "0.5.6" }
async-ctrlc = { version = "1.2" }
x25519-dalek = { version = "2" }
cached = { version = "0.53" }
fixed = { version = "1" }
sphinx-packet = { version = "0.2" }
futures-timer = { version = "3.0.3" }
opentelemetry-http = { version = "0.26" }
opentelemetry-semantic-conventions = { version = "0.26" }
url = { version = "2" }
clap = { version = "4" }
http = { version = "0.2.9" }
serde_yaml = { version = "0.9" }
color-eyre = { version = "0.6.0" }
uuid = { version = "1.10" }
digest = { version = "0.10" }
integer-encoding = { version = "3" }
fraction = { version = "0.13" }
proptest = { version = "1.2.0" }
proptest-state-machine = { version = "0.1.0" }
rpds = { version = "1" }
secp256k1 = { version = "0.26" }
ntest = { version = "0.9.0" }
criterion = { version = "0.5" }
zeroize = { version = "1" }
ed25519-dalek = { version = "2" }
tauri-bundler = { version = "2.2.1" }
tauri-utils = { version = "2.1.1" }
env_logger = { version = "0.11.6" }
